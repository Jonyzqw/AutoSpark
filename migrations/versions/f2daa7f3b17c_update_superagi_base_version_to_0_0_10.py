"""update superagi base version to 0.0.10

Revision ID: f2daa7f3b17c
Revises: d1996dfe1f77
Create Date: 2023-08-20 10:00:57.172923

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f2daa7f3b17c'
down_revision = 'd1996dfe1f77'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('agent_workflow_step_tools',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tool_name', sa.String(), nullable=True),
    sa.Column('unique_id', sa.String(), nullable=True),
    sa.Column('input_instruction', sa.Text(), nullable=True),
    sa.Column('output_instruction', sa.Text(), nullable=True),
    sa.Column('history_enabled', sa.Boolean(), nullable=True),
    sa.Column('completion_prompt', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('iteration_workflow_steps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('iteration_workflow_id', sa.Integer(), nullable=True),
    sa.Column('unique_id', sa.String(), nullable=True),
    sa.Column('prompt', sa.Text(), nullable=True),
    sa.Column('variables', sa.Text(), nullable=True),
    sa.Column('output_type', sa.String(), nullable=True),
    sa.Column('step_type', sa.String(), nullable=True),
    sa.Column('next_step_id', sa.Integer(), nullable=True),
    sa.Column('history_enabled', sa.Boolean(), nullable=True),
    sa.Column('completion_prompt', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('iteration_workflows',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('has_task_queue', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('knowledge_configs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('knowledge_id', sa.Integer(), nullable=True),
    sa.Column('key', sa.String(), nullable=True),
    sa.Column('value', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('knowledges',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('vector_db_index_id', sa.Integer(), nullable=True),
    sa.Column('organisation_id', sa.Integer(), nullable=True),
    sa.Column('contributed_by', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('marketplace_stats',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.Column('reference_name', sa.String(), nullable=True),
    sa.Column('key', sa.String(), nullable=True),
    sa.Column('value', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('agent_execution_feeds', sa.Column('feed_group_id', sa.String(), nullable=True))
    op.add_column('agent_execution_permissions', sa.Column('question', sa.Text(), nullable=True))
    op.add_column('agent_executions', sa.Column('current_agent_step_id', sa.Integer(), nullable=True))
    op.add_column('agent_executions', sa.Column('iteration_workflow_step_id', sa.Integer(), nullable=True))
    op.add_column('agent_executions', sa.Column('current_feed_group_id', sa.String(), nullable=True))
    op.drop_column('agent_executions', 'current_step_id')
    op.add_column('agent_workflow_steps', sa.Column('action_type', sa.String(), nullable=True))
    op.add_column('agent_workflow_steps', sa.Column('action_reference_id', sa.Integer(), nullable=True))
    op.add_column('agent_workflow_steps', sa.Column('next_steps', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.drop_column('agent_workflow_steps', 'output_type')
    op.drop_column('agent_workflow_steps', 'variables')
    op.drop_column('agent_workflow_steps', 'prompt')
    op.drop_column('agent_workflow_steps', 'completion_prompt')
    op.drop_column('agent_workflow_steps', 'next_step_id')
    op.drop_column('agent_workflow_steps', 'history_enabled')
    op.add_column('tool_configs', sa.Column('key_type', sa.String(), nullable=True))
    op.add_column('tool_configs', sa.Column('is_secret', sa.Boolean(), nullable=True))
    op.add_column('tool_configs', sa.Column('is_required', sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('tool_configs', 'is_required')
    op.drop_column('tool_configs', 'is_secret')
    op.drop_column('tool_configs', 'key_type')
    op.add_column('agent_workflow_steps', sa.Column('history_enabled', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('agent_workflow_steps', sa.Column('next_step_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('agent_workflow_steps', sa.Column('completion_prompt', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('agent_workflow_steps', sa.Column('prompt', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('agent_workflow_steps', sa.Column('variables', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('agent_workflow_steps', sa.Column('output_type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('agent_workflow_steps', 'next_steps')
    op.drop_column('agent_workflow_steps', 'action_reference_id')
    op.drop_column('agent_workflow_steps', 'action_type')
    op.add_column('agent_executions', sa.Column('current_step_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_column('agent_executions', 'current_feed_group_id')
    op.drop_column('agent_executions', 'iteration_workflow_step_id')
    op.drop_column('agent_executions', 'current_agent_step_id')
    op.drop_column('agent_execution_permissions', 'question')
    op.drop_column('agent_execution_feeds', 'feed_group_id')
    op.drop_table('marketplace_stats')
    op.drop_table('knowledges')
    op.drop_table('knowledge_configs')
    op.drop_table('iteration_workflows')
    op.drop_table('iteration_workflow_steps')
    op.drop_table('agent_workflow_step_tools')
    # ### end Alembic commands ###
